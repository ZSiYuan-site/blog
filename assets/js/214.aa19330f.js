(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{1026:function(t,e,l){"use strict";l.r(e);var n=l(17),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h2",{attrs:{id:"线程与进程"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#线程与进程"}},[t._v("#")]),t._v(" 线程与进程")]),t._v(" "),l("ul",[l("li",[l("p",[t._v("1.多线程：每次请求都会开启新的进程")]),t._v(" "),l("ul",[l("li",[t._v("优点：可以同时处理多个请求")]),t._v(" "),l("li",[t._v("缺点：使用的是切换时间片的概念，浪费性能，同时开启了多个进程浪费内存")]),t._v(" "),l("li",[t._v("场景:适合cpu密集型（压缩，合算，计算）")])])]),t._v(" "),l("li",[l("p",[t._v("node是单线程，单进程的：不适用cpu密集型，适合 I/O密集（文件的读写）")]),t._v(" "),l("ul",[l("li",[t._v("node应用：解决跨域，中间层，ssr服务端渲染，纯服务端")]),t._v(" "),l("li",[t._v("说明:node只有一个主线程，理论上只占一核，此时不能很好的利用cpu，但是node可以开子进程")])])])]),t._v(" "),l("p",[t._v("一个进程占用一个核（cpu）")])])}),[],!1,null,null,null);e.default=s.exports}}]);