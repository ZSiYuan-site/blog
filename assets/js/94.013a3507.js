(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{1295:function(e,l,s){"use strict";s.r(l);var t=s(17),a=Object(t.a)({},(function(){var e=this,l=e.$createElement,t=e._self._c||l;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"说一下flex布局"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#说一下flex布局"}},[e._v("#")]),e._v(" 说一下flex布局")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("前言：布局的传统解决方案，基于盒状模型，依赖 display 属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。")])]),e._v(" "),t("li",[t("p",[e._v('概念：Flex是Flexible Box的缩写，意为"弹性布局"，用来为盒装模型提供最大的灵活性。采用 Flex 布局的元素，称为 Flex 容器（flex container），简称"容器"。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称"项目"。\n'),t("img",{attrs:{src:s(885),alt:""}})])])]),e._v(" "),t("blockquote",[t("p",[e._v("基本概念：容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。")])]),e._v(" "),t("blockquote",[t("p",[e._v("项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。")])]),e._v(" "),t("blockquote",[t("p",[e._v("回答时候简而言之：弹性布局由父级容器、子容器构成，通过设置主轴和交叉轴来控制子元素的排序方式")])]),e._v(" "),t("h3",{attrs:{id:"说说父级容器属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#说说父级容器属性"}},[e._v("#")]),e._v(" 说说父级容器属性")]),e._v(" "),t("p",[e._v("以下6个属性设置在容器上。")]),e._v(" "),t("blockquote",[t("p",[e._v("flex-direction :  row | row-reverse | column | column-reverse;  该属性定义了 子元素排列方向")])]),e._v(" "),t("blockquote",[t("p",[e._v('flex-wrap：nowrap | wrap | wrap-reverse;  该属性称"轴线"')])]),e._v(" "),t("blockquote",[t("p",[e._v("flex-flow：  || ; flex-direction和flex-wrap的简写形式，默认值为row nowrap")])]),e._v(" "),t("blockquote",[t("p",[e._v("justify-content: flex-start | flex-end | center | space-between | space-around;  该属性定义了子元素在主轴上的对齐方式。")])]),e._v(" "),t("blockquote",[t("p",[e._v("align-items:  flex-start | flex-end | center | baseline | stretch;  定义项目在交叉轴上如何对齐。")])]),e._v(" "),t("blockquote",[t("p",[e._v("align-content: flex-start | flex-end | center | space-between | space-around | stretch; 属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用")])]),e._v(" "),t("h3",{attrs:{id:"说说子级容器属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#说说子级容器属性"}},[e._v("#")]),e._v(" 说说子级容器属性")]),e._v(" "),t("p",[e._v("弹性布局子元素、子容器、项目、项说的是一个概念子容器")]),e._v(" "),t("ul",[t("li",[e._v("（1）order属性\n"),t("ul",[t("li",[e._v("order属性定义子元素或者子容器的排列顺序。数值越小，排列越靠前，默认为0。")])])])]),e._v(" "),t("div",{staticClass:"language-css line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-css"}},[t("code",[e._v("flex-grow \nflex-shrink\nflex-basis\nflex\nalign-self\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br")])]),t("ul",[t("li",[t("p",[e._v("（2）flex-grow属性")]),e._v(" "),t("ul",[t("li",[e._v("flex-grow属性定义子元素或者子容器的放大比例，默认为0，即如果存在剩余空间，也不放大。")]),e._v(" "),t("li",[e._v("如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。")])])]),e._v(" "),t("li",[t("p",[e._v("（3）flex-shrink属性")]),e._v(" "),t("ul",[t("li",[e._v("flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。")]),e._v(" "),t("li",[e._v("如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。")]),e._v(" "),t("li",[e._v("负值对该属性无效。")])])]),e._v(" "),t("li",[t("p",[e._v("（4）flex-basis属性")]),e._v(" "),t("ul",[t("li",[e._v("flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。")]),e._v(" "),t("li",[e._v("它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。")])])]),e._v(" "),t("li",[t("p",[e._v("(5)flex属性")]),e._v(" "),t("ul",[t("li",[e._v("flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。")]),e._v(" "),t("li",[e._v("该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。")]),e._v(" "),t("li",[e._v("建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。")])])]),e._v(" "),t("li",[t("p",[e._v("(6)align-self属性")]),e._v(" "),t("ul",[t("li",[e._v("align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。")]),e._v(" "),t("li",[e._v(".item { align-self: auto | flex-start | flex-end | center | baseline | stretch; }")]),e._v(" "),t("li",[e._v("该属性可能取6个值，除了auto，其他都与align-items属性完全一致。")])])])])])}),[],!1,null,null,null);l.default=a.exports},885:function(e,l,s){e.exports=s.p+"assets/img/1.e03ded01.jpg"}}]);