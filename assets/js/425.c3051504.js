(window.webpackJsonp=window.webpackJsonp||[]).push([[425],{1314:function(t,e,n){"use strict";n.r(e);var s=n(17),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"三种事件模型是什么"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三种事件模型是什么"}},[t._v("#")]),t._v(" 三种事件模型是什么")]),t._v(" "),n("p",[t._v("事件是用户操作网页时发生的交互动作或者网页本身的一些操作，现代浏览器一共有三种事件模型。")]),t._v(" "),n("ul",[n("li",[t._v("DOMO级事模型：第一种事件模型是最早的DOMO级模型，这种模型不会传播，所以没有事件流的概念，但是现在有的浏览器支持以冒泡的方式实现，它可以在网页中直接定义监听函数，也可以通过js属性来指定监听函数。这种方式是所有浏览器都兼容的。")]),t._v(" "),n("li",[t._v("IE事件模型：在该事件模型中，一次事件共有两个过程，事件处理阶段，和事件冒泡阶段。事件处理阶段会首先执行目标元素绑定的监听事件。然后是事件冒泡阶段，冒泡指的是事件从目标元素冒泡到document,依次检查经过的节点是否绑定了事件监听函数，如果有则执行。这种模型通过attachEvent来添加监听函数，可以添加多个监听函数，会按顺序依次执行。")]),t._v(" "),n("li",[t._v("DOM2级事件模型：在该事模型中，一次事共有三个过程，第一个过程是事件捕获阶段。捕获指的是事件 document一直向下传播到目标元素，依次检査经过的节点是否绑定了事件监听函数，如果有则执行。后面两个阶段和IE事件模型的两个阶段相同。这种事件模型，事件绑定的函数是addEventListener,其中第三个参数可以是指定事件是否在捕获阶执行。")])])])}),[],!1,null,null,null);e.default=a.exports}}]);